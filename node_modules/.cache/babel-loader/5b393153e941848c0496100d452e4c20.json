{"remainingRequest":"C:\\Users\\CJ\\Desktop\\cook-rms-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\CJ\\Desktop\\cook-rms-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\CJ\\Desktop\\cook-rms-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\CJ\\Desktop\\cook-rms-master\\src\\views\\menu\\MenuDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\CJ\\Desktop\\cook-rms-master\\src\\views\\menu\\MenuDetail.vue","mtime":1591061914000},{"path":"C:\\Users\\CJ\\Desktop\\cook-rms-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\CJ\\Desktop\\cook-rms-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\CJ\\Desktop\\cook-rms-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\CJ\\Desktop\\cook-rms-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJNZW51RGV0YWlsIiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbWVudUlkOiBudWxsLAogICAgICBmb3JtTWVudToge30sCiAgICAgIGZsMTogW10KICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5nZXRNZW51SWQoKTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldE1lbnVEZXRhaWwoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldE1lbnVJZDogZnVuY3Rpb24gZ2V0TWVudUlkKCkgewogICAgICB0aGlzLm1lbnVJZCA9IHRoaXMuJHJvdXRlLnF1ZXJ5LmlkOwogICAgfSwKICAgIC8vIOa3u+WKoOiPnOiwsQogICAgYWRkRmxMaXN0Um93OiBmdW5jdGlvbiBhZGRGbExpc3RSb3coKSB7CiAgICAgIHRoaXMuZmwxLnB1c2goewogICAgICAgICJuYW1lIjogIiIsCiAgICAgICAgIndlaWdodCI6ICIiCiAgICAgIH0pOwogICAgfSwKICAgIGFkZENvb2tTdGVwc0xpc3RSb3c6IGZ1bmN0aW9uIGFkZENvb2tTdGVwc0xpc3RSb3coKSB7CiAgICAgIHRoaXMuZm9ybU1lbnUuY29va1N0ZXBzLnB1c2goewogICAgICAgICJzdGVwVXJsIjogIiIsCiAgICAgICAgImRlc2NyaXB0aW9uIjogIiIKICAgICAgfSk7CiAgICB9LAogICAgZGVsZXRlRmw6IGZ1bmN0aW9uIGRlbGV0ZUZsKGluZGV4LCByb3dzKSB7CiAgICAgIHJvd3Muc3BsaWNlKGluZGV4LCAxKTsKICAgIH0sCiAgICBkZWxldGVDb29rU3RlcDogZnVuY3Rpb24gZGVsZXRlQ29va1N0ZXAoaW5kZXgsIHJvd3MpIHsKICAgICAgcm93cy5zcGxpY2UoaW5kZXgsIDEpOwogICAgfSwKICAgIGdldE1lbnVEZXRhaWw6IGZ1bmN0aW9uIGdldE1lbnVEZXRhaWwoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICAvLyDmn6Xor6Loj5zosLHor6bmg4UKICAgICAgdGhpcy4kYXhpb3MuZ2V0KCIvYXBpL21lbnUtYW5vbi9nZXRNZW51RGV0YWlsIiwgewogICAgICAgIHBhcmFtczogewogICAgICAgICAgbWVudUlkOiB0aGlzLm1lbnVJZCwKICAgICAgICAgIHVzZXJJZDogJycKICAgICAgICB9CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGlmIChyZXMuc3RhdHVzID09PSAyMDApIHsKICAgICAgICAgIGNvbnNvbGUubG9nKHJlcy5kYXRhLmRhdGEpOwogICAgICAgICAgX3RoaXMuZm9ybU1lbnUgPSByZXMuZGF0YS5kYXRhOyAvLyB0aGlzLmZvcm1NZW51LmZsID0gSlNPTi5zdHJpbmdpZnkodGhpcy5mb3JtTWVudS5mbDEpOwoKICAgICAgICAgIHZhciBqc29uT2JqID0gSlNPTi5wYXJzZShyZXMuZGF0YS5kYXRhLmZsKTsKCiAgICAgICAgICBmb3IgKHZhciBpIGluIGpzb25PYmopIHsKICAgICAgICAgICAgX3RoaXMuZmwxLnB1c2goanNvbk9ialtpXSk7CiAgICAgICAgICB9IC8vIHRoaXMuZmwxID0gSlNPTi5wYXJzZShyZXMuZGF0YS5kYXRhLmZsKTsKICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHJlcy5kYXRhLmRhdGEpOwoKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX3RoaXMuJGFsZXJ0KCLmn6Xor6Loj5zosLHor6bmg4XlpLHotKUiKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIHVwZGF0ZU1lbnVQdWJsaXNoRm9ybTogZnVuY3Rpb24gdXBkYXRlTWVudVB1Ymxpc2hGb3JtKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIC8vIOiNieeov+eKtuaAgeS4ujAgbWVudUZvcm0KICAgICAgY29uc29sZS5sb2coIuWPkeW4gyIpOwogICAgICB0aGlzLiRyZWZzLm1lbnVGb3JtLnZhbGlkYXRlKGZ1bmN0aW9uICh2YWxpZCkgewogICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgX3RoaXMyLmZvcm1NZW51LnB1Ymxpc2hTdGF0dXMgPSAyOwogICAgICAgICAgX3RoaXMyLmZvcm1NZW51LmZsID0gSlNPTi5zdHJpbmdpZnkoX3RoaXMyLmZsMSk7IC8vIOWvueixoei9rOaIkGpzb27lr7nosaEKCiAgICAgICAgICB2YXIgZm9ybURhdGEgPSBKU09OLnN0cmluZ2lmeShfdGhpczIuZm9ybU1lbnUpOwogICAgICAgICAgdmFyIGNvbmZpZyA9IHsKICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbjtjaGFyc2V0PVVURi04IgogICAgICAgICAgICB9CiAgICAgICAgICB9OwogICAgICAgICAgdmFyIHVybCA9ICIvYXBpL21lbnUvdXBkYXRlTWVudSI7CgogICAgICAgICAgX3RoaXMyLiRheGlvcy5wb3N0KHVybCwgZm9ybURhdGEsIGNvbmZpZykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgIGlmIChyZXMuc3RhdHVzID09PSAyMDApIHsKICAgICAgICAgICAgICBfdGhpczIuJG1lc3NhZ2Uuc3VjY2Vzcygi57yW6L6R5oiQ5YqfIik7IC8vIOmYsuatouihqOWNleiusOW9leS4iuasoeiusOW9lQoKCiAgICAgICAgICAgICAgX3RoaXMyLmZvcm1NZW51ID0gewogICAgICAgICAgICAgICAgYnJhbmRfcmlnaHQ6IDAKICAgICAgICAgICAgICB9OyAvLyDmt7vliqDmiJDlip/ot7PovazliLDoj5zosLHpobXpnaIKCiAgICAgICAgICAgICAgX3RoaXMyLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgICAgICAgICBwYXRoOiAiL21lbnUiCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2Vycm9yIHN1Ym1pdCEhJyk7CiAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIHVwZGF0ZU1lbnVGb3JtOiBmdW5jdGlvbiB1cGRhdGVNZW51Rm9ybSgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICAvLyDkuIrmnrbnirbmgIHkuLoxCiAgICAgIGNvbnNvbGUubG9nKCLkuIrmnrYiKTsKICAgICAgdGhpcy4kcmVmcy5tZW51Rm9ybS52YWxpZGF0ZShmdW5jdGlvbiAodmFsaWQpIHsKICAgICAgICBpZiAodmFsaWQpIHsKICAgICAgICAgIF90aGlzMy5mb3JtTWVudS5wdWJsaXNoU3RhdHVzID0gMTsKICAgICAgICAgIF90aGlzMy5mb3JtTWVudS5mbCA9IEpTT04uc3RyaW5naWZ5KF90aGlzMy5mbDEpOwogICAgICAgICAgY29uc29sZS5sb2codmFsaWQpOyAvLyDlr7nosaHovazmiJBqc29u5a+56LGhCgogICAgICAgICAgdmFyIGZvcm1EYXRhID0gSlNPTi5zdHJpbmdpZnkoX3RoaXMzLmZvcm1NZW51KTsKICAgICAgICAgIHZhciBjb25maWcgPSB7CiAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD1VVEYtOCIKICAgICAgICAgICAgfQogICAgICAgICAgfTsKICAgICAgICAgIHZhciB1cmwgPSAiL2FwaS9tZW51L3VwZGF0ZU1lbnUiOwoKICAgICAgICAgIF90aGlzMy4kYXhpb3MucG9zdCh1cmwsIGZvcm1EYXRhLCBjb25maWcpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICBpZiAocmVzLnN0YXR1cyA9PT0gMjAwKSB7CiAgICAgICAgICAgICAgX3RoaXMzLiRtZXNzYWdlLnN1Y2Nlc3MoIue8lui+keaIkOWKnyIpOyAvLyDpmLLmraLooajljZXorrDlvZXkuIrmrKHorrDlvZUKCgogICAgICAgICAgICAgIF90aGlzMy5mb3JtTWVudSA9IHsKICAgICAgICAgICAgICAgIGJyYW5kX3JpZ2h0OiAwCiAgICAgICAgICAgICAgfTsgLy8g5re75Yqg5oiQ5Yqf6Lez6L2s5Yiw6I+c6LCx6aG16Z2iCgogICAgICAgICAgICAgIF90aGlzMy4kcm91dGVyLnB1c2goewogICAgICAgICAgICAgICAgcGF0aDogIi9tZW51IgogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdlcnJvciBzdWJtaXQhIScpOwogICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["MenuDetail.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <el-card class=\"box-card\">\n  <el-form ref=\"menuForm\" :model=\"formMenu\" >\n    <el-form-item label=\"菜谱名称:\" label-width=\"100px\">\n      <el-input v-model=\"formMenu.name\" placeholder=\"请输入菜谱名称\" style=\"width:200px\"></el-input>\n    </el-form-item>\n    <el-form-item label=\"菜谱难度:\" label-width=\"100px\">\n      <el-select v-model=\"formMenu.deg\" placeholder=\"请选择菜谱难度\">\n        <el-option label=\"1\" value=\"1\"></el-option>\n        <el-option label=\"2\" value=\"2\"></el-option>\n        <el-option label=\"3\" value=\"3\"></el-option>\n        <el-option label=\"4\" value=\"4\"></el-option>\n        <el-option label=\"5\" value=\"5\"></el-option>\n      </el-select>\n    </el-form-item>\n    <el-form-item label=\"预计用时:\" label-width=\"100px\" style=\"width:200px\">\n      <el-input v-model=\"formMenu.tm\" ></el-input>\n    </el-form-item>\n    <el-form-item label=\"菜谱头图:\" label-width=\"100px\" style=\"width:200px\">\n      <el-input v-model=\"formMenu.menuUrl\" ></el-input>\n    </el-form-item>\n    <!--      table表格形式可以实现表格的增加一行-->\n    <el-form-item label=\"食材清单:\" label-width=\"100px\">\n      <el-table\n              border\n              :data=\"fl1\"\n              style=\"width: 50%\">\n        <el-table-column fixed=\"left\"  label=\"食材名称\" min-width=\"30\">\n          <template slot-scope=\"scope\">\n            <el-input v-model=\"scope.row.name\"></el-input>\n          </template>\n        </el-table-column>\n        <el-table-column  label=\"分量\" min-width=\"20\">\n          <template slot-scope=\"scope\">\n            <el-input v-model=\"scope.row.weight\"></el-input>\n          </template>\n        </el-table-column>\n        <el-table-column\n                fixed=\"right\"\n                label=\"操作\"\n                width=\"120\">\n          <template slot-scope=\"scope\">\n            <el-button\n                    @click.native.prevent=\"deleteFl(scope.$index, formMenu.fl)\"\n                    type=\"text\"\n                    size=\"small\">\n              移除\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <el-button type=\"success\" @click=\"addFlListRow()\" round>添加一行</el-button>\n    </el-form-item>\n    <el-form-item label-width=\"100px\">\n      <el-input v-model=\"formMenu.fl\" type=\"hidden\"></el-input>\n    </el-form-item>\n    <el-form-item label=\"图文步骤:\" label-width=\"100px\">\n      <el-table\n              border\n              :data=\"formMenu.cookSteps\"\n              style=\"width: 70%\">\n        <el-table-column fixed=\"left\"  label=\"图片url\" min-width=\"20\">\n          <template slot-scope=\"scope\">\n            <el-input v-model=\"scope.row.stepUrl\"></el-input>\n          </template>\n        </el-table-column>\n        <el-table-column  label=\"图片说明\" min-width=\"40\">\n          <template slot-scope=\"scope\">\n            <el-input v-model=\"scope.row.description\"></el-input>\n          </template>\n        </el-table-column>\n        <el-table-column\n                fixed=\"right\"\n                label=\"操作\"\n                min-width=\"10\">\n          <template slot-scope=\"scope\">\n            <el-button\n                    @click.native.prevent=\"deleteCookStep(scope.$index, formMenu.cookSteps)\"\n                    type=\"text\"\n                    size=\"small\">\n              移除\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <el-button type=\"success\" @click=\"addCookStepsListRow()\" round>添加一行</el-button>\n    </el-form-item>\n    <el-form-item label=\"小贴士:\" label-width=\"100px\">\n      <el-input v-model=\"formMenu.tip\"\n                placeholder=\"请输入小贴士\"\n                style=\"width:300px\"\n                type=\"textarea\"\n                maxlength=\"200\"\n                show-word-limit\n                clearable\n      ></el-input>\n    </el-form-item>\n    <el-form-item label-width=\"100px\">\n      <el-checkbox v-model=\"formMenu.isOfficial\">是否发布为官方菜谱</el-checkbox>\n    </el-form-item>\n    <el-form-item label-width=\"100px\">\n      <el-button type=\"primary\" @click=\"updateMenuPublishForm()\">发布</el-button>\n      <el-button type=\"primary\" @click=\"updateMenuForm()\">上传</el-button>\n    </el-form-item>\n  </el-form>\n  </el-card>\n</template>\n\n<script>\n    export default {\n        name: \"MenuDetail\",\n        data() {\n            return {\n                menuId: null,\n                formMenu: {},\n                fl1: [],\n            }\n        },\n        created() {\n            this.getMenuId();\n        },\n        mounted() {\n            this.getMenuDetail();\n        },\n        methods: {\n            getMenuId() {\n                this.menuId = this.$route.query.id;\n            },\n            // 添加菜谱\n            addFlListRow() {\n                this.fl1.push({\n                    \"name\": \"\",\n                    \"weight\": \"\",\n                })\n            },\n            addCookStepsListRow() {\n                this.formMenu.cookSteps.push({\n                    \"stepUrl\": \"\",\n                    \"description\": \"\",\n                })\n            },\n            deleteFl(index, rows) {\n                rows.splice(index, 1);\n            },\n            deleteCookStep(index, rows) {\n                rows.splice(index, 1);\n            },\n            getMenuDetail() {\n                // 查询菜谱详情\n                this.$axios.get(\"/api/menu-anon/getMenuDetail\",{\n                    params: {\n                        menuId: this.menuId,\n                        userId: ''\n                    }\n                }).then(res=> {\n                    if (res.status === 200) {\n                        console.log(res.data.data);\n                        this.formMenu = res.data.data;\n                        // this.formMenu.fl = JSON.stringify(this.formMenu.fl1);\n                        let jsonObj = JSON.parse(res.data.data.fl);\n                        for (let i in jsonObj) {\n                            this.fl1.push(jsonObj[i]);\n                        }\n                        // this.fl1 = JSON.parse(res.data.data.fl);\n                        // console.log(res.data.data);\n                    } else {\n                        this.$alert(\"查询菜谱详情失败\");\n                    }\n                })\n            },\n            updateMenuPublishForm() {\n                // 草稿状态为0 menuForm\n                console.log(\"发布\")\n                this.$refs.menuForm.validate((valid) => {\n                    if (valid) {\n                        this.formMenu.publishStatus = 2;\n                        this.formMenu.fl = JSON.stringify(this.fl1);\n                        // 对象转成json对象\n                        let formData = JSON.stringify(this.formMenu);\n                        let config = {\n                            headers: {\"Content-Type\": \"application/json;charset=UTF-8\"}\n                        };\n                        let url = \"/api/menu/updateMenu\";\n                        this.$axios.post(url, formData, config).then(res => {\n                            if (res.status === 200) {\n                                this.$message.success(\"编辑成功\");\n                                // 防止表单记录上次记录\n                                this.formMenu={brand_right:0};\n                                // 添加成功跳转到菜谱页面\n                                this.$router.push({path:\"/menu\"});\n                            } else {\n                                console.log('error submit!!');\n                                return false;\n                            }\n                        });\n                    }\n                });\n\n            },\n            updateMenuForm(){\n                // 上架状态为1\n                console.log(\"上架\");\n                this.$refs.menuForm.validate((valid) => {\n                    if (valid) {\n                        this.formMenu.publishStatus = 1;\n                        this.formMenu.fl = JSON.stringify(this.fl1);\n                        console.log(valid);\n                        // 对象转成json对象\n                        let formData = JSON.stringify(this.formMenu);\n                        let config = {\n                            headers: {\"Content-Type\": \"application/json;charset=UTF-8\"}\n                        };\n                        let url = \"/api/menu/updateMenu\";\n                        this.$axios.post(url, formData, config).then(res => {\n                            if (res.status === 200) {\n                                this.$message.success(\"编辑成功\");\n                                // 防止表单记录上次记录\n                                this.formMenu={brand_right:0};\n                                // 添加成功跳转到菜谱页面\n                                this.$router.push({path:\"/menu\"});\n                            } else {\n                                console.log('error submit!!');\n                                return false;\n                            }\n                        });\n                    }\n                });\n\n            },\n\n\n        }\n\n    }\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/views/menu"}]}